window.SIDEBAR_ITEMS = {"constant":[["ZN_ADD_TIMESTAMP_DEFAULT",""],["ZN_ADD_TIMESTAMP_KEY","Indicates if data messages should be timestamped. String key : `\"add_timestamp\"`. Accepted values : `\"true\"`, `\"false\"`. Default value : `\"false\"`."],["ZN_ADD_TIMESTAMP_STR",""],["ZN_AUTH_RSA_KEY_SIZE_DEFAULT",""],["ZN_AUTH_RSA_KEY_SIZE_KEY","The default RSA key size. String key : `\"auth_rsa_key_size\"`. Accepted values : `<unsigned integer>`."],["ZN_AUTH_RSA_KEY_SIZE_STR",""],["ZN_AUTH_RSA_KNOWN_KEYS_FILE_KEY","The list of known RSA public keys. String key : `\"auth_rsa_known_keys_file\"`. Accepted values : `<file path>`."],["ZN_AUTH_RSA_KNOWN_KEYS_FILE_STR",""],["ZN_AUTH_RSA_PRIVATE_KEY_FILE_KEY","The private RSA key. String key : `\"auth_rsa_private_key_pem\"`. Accepted values : `<file path>`."],["ZN_AUTH_RSA_PRIVATE_KEY_FILE_STR",""],["ZN_AUTH_RSA_PRIVATE_KEY_PEM_KEY","The private RSA key. String key : `\"auth_rsa_private_key_pem\"`. Accepted values : `<RSA key in PEM format>`."],["ZN_AUTH_RSA_PRIVATE_KEY_PEM_STR",""],["ZN_AUTH_RSA_PUBLIC_KEY_FILE_KEY","The public RSA key. String key : `\"auth_rsa_public_key_pem\"`. Accepted values : `<file path>`."],["ZN_AUTH_RSA_PUBLIC_KEY_FILE_STR",""],["ZN_AUTH_RSA_PUBLIC_KEY_PEM_KEY","The public RSA key. String key : `\"auth_rsa_public_key_pem\"`. Accepted values : `<RSA key in PEM format>`."],["ZN_AUTH_RSA_PUBLIC_KEY_PEM_STR",""],["ZN_AUTO","`\"auto\"`"],["ZN_BATCH_SIZE_DEFAULT",""],["ZN_BATCH_SIZE_KEY","Configures the batch size. String key : `\"batch_size\"`. Accepted values : `<unsigned 16-bit integer>`. Default value : `65535`."],["ZN_BATCH_SIZE_STR",""],["ZN_CONNECT_KEY","The locator of a peer to connect to. String key : `\"connect\"`. Accepted values : `<endpoint>` (ex: `\"tcp/10.10.10.10:7447\"`). Default value : None. Multiple values accepted."],["ZN_CONNECT_STR",""],["ZN_DEFRAG_BUFF_SIZE_DEFAULT",""],["ZN_DEFRAG_BUFF_SIZE_KEY","Configures the maximum size in bytes of the defragmentation buffer at receiving side. Messages that have been fragmented and that are larger than the configured size will be dropped. String key : `\"defrag_buff_size\"`. Accepted values : `<unsigned integer>`. Default value : `1073741824` (1GiB)."],["ZN_DEFRAG_BUFF_SIZE_STR",""],["ZN_FALSE","`\"false\"`"],["ZN_JOIN_INTERVAL_DEFAULT",""],["ZN_JOIN_INTERVAL_KEY","Configures the link keep alive expressed in milliseconds. String key : `\"join_interval\"`. Accepted values : `<unsigned integer>`. Default value : `2500`."],["ZN_JOIN_INTERVAL_STR",""],["ZN_JOIN_PUBLICATIONS_KEY",""],["ZN_JOIN_PUBLICATIONS_STR",""],["ZN_JOIN_SUBSCRIPTIONS_KEY",""],["ZN_JOIN_SUBSCRIPTIONS_STR",""],["ZN_LINK_KEEP_ALIVE_DEFAULT",""],["ZN_LINK_KEEP_ALIVE_KEY","Configures the number of keep-alive messages in a link lease duration. String key : `\"link_keep_alive\"`. Accepted values : `<unsigned integer>`. Default value : `4 (2.5 seconds)`."],["ZN_LINK_KEEP_ALIVE_STR",""],["ZN_LINK_LEASE_DEFAULT",""],["ZN_LINK_LEASE_KEY","Configures the link lease expressed in milliseconds. String key : `\"link_lease\"`. Accepted values : `<unsigned integer>`. Default value : `10000 (10 seconds)`."],["ZN_LINK_LEASE_STR",""],["ZN_LINK_RX_BUFF_SIZE_DEFAULT",""],["ZN_LINK_RX_BUFF_SIZE_KEY","Configures the buffer size in bytes at receiving side for each link. String key : `\"link_rx_buff_size\"`. Accepted values : `<unsigned integer>`. Default value : `65535` (64KiB)."],["ZN_LINK_RX_BUFF_SIZE_STR",""],["ZN_LINK_STATE_DEFAULT",""],["ZN_LINK_STATE_KEY","Indicates if the link state protocol should run. String key : `\"link_state\"`. Accepted values : `\"true\"`, `\"false\"`. Default value : `\"true\"`."],["ZN_LINK_STATE_STR",""],["ZN_LISTEN_KEY","A locator to listen on. String key : `\"listen\"`. Accepted values : `<endpoint>` (ex: `\"tcp/10.10.10.10:7447\"`). Default value : None. Multiple values accepted."],["ZN_LISTEN_STR",""],["ZN_MAX_LINKS_DEFAULT",""],["ZN_MAX_LINKS_KEY","Configures the maximum number of inbound links per open session. String key : `\"max_links\"`. Accepted values : `<unsigned integer>`. Default value : `1`."],["ZN_MAX_LINKS_STR",""],["ZN_MAX_SESSIONS_MULTICAST_DEFAULT",""],["ZN_MAX_SESSIONS_MULTICAST_KEY","Configures the maximum number of simultaneous open unicast sessions. String key : `\"max_sessions_unicast\"`. Accepted values : `<unsigned integer>`. Default value : `1024`."],["ZN_MAX_SESSIONS_MULTICAST_STR",""],["ZN_MAX_SESSIONS_UNICAST_DEFAULT",""],["ZN_MAX_SESSIONS_UNICAST_KEY","Configures the maximum number of simultaneous open unicast sessions. String key : `\"max_sessions_unicast\"`. Accepted values : `<unsigned integer>`. Default value : `1024`."],["ZN_MAX_SESSIONS_UNICAST_STR",""],["ZN_MODE_DEFAULT",""],["ZN_MODE_KEY","The library mode. String key : `\"mode\"`. Accepted values : `\"peer\"`, `\"client\"`. Default value : `\"peer\"`."],["ZN_MODE_STR",""],["ZN_MULTICAST_INTERFACE_DEFAULT",""],["ZN_MULTICAST_INTERFACE_KEY","The network interface to use for multicast scouting. String key : `\"multicast_interface\"`. Accepted values : `\"auto\"`, `<ip address>`, `<interface name>`. Default value : `\"auto\"`."],["ZN_MULTICAST_INTERFACE_STR",""],["ZN_MULTICAST_IPV4_ADDRESS_DEFAULT",""],["ZN_MULTICAST_IPV4_ADDRESS_KEY","The multicast IPv4 address and ports to use for multicast scouting. String key : `\"multicast_ipv4_address\"`. Accepted values : `<ipv4 address>:<port>`. Default value : `\"224.0.0.224:7446\"`."],["ZN_MULTICAST_IPV4_ADDRESS_STR",""],["ZN_MULTICAST_IPV6_ADDRESS_DEFAULT",""],["ZN_MULTICAST_IPV6_ADDRESS_KEY","The multicast IPv6 address and ports to use for multicast scouting. String key : `\"multicast_ipv6_address\"`. Accepted values : `<ipv6 address>:<port>`. Default value : `\"[ff24::224]:7446\"`."],["ZN_MULTICAST_IPV6_ADDRESS_STR",""],["ZN_MULTICAST_SCOUTING_DEFAULT",""],["ZN_MULTICAST_SCOUTING_KEY","Activates/Desactivates multicast scouting. String key : `\"multicast_scouting\"`. Accepted values : `\"true\"`, `\"false\"`. Default value : `\"true\"`."],["ZN_MULTICAST_SCOUTING_STR",""],["ZN_OPEN_INCOMING_PENDING_DEFAULT",""],["ZN_OPEN_INCOMING_PENDING_KEY","Configures the number of open session that can be in pending state. String key : `\"open_pending\"`. Accepted values : `<unsigned integer>`. Default value : `1024`."],["ZN_OPEN_INCOMING_PENDING_STR",""],["ZN_OPEN_TIMEOUT_DEFAULT",""],["ZN_OPEN_TIMEOUT_KEY","Configures the timeout in milliseconds when opening a link. String key : `\"open_timeout\"`. Accepted values : `<unsigned integer>`. Default value : `10000`."],["ZN_OPEN_TIMEOUT_STR",""],["ZN_PASSWORD_KEY","The password to use for authentication. String key : `\"password\"`. Accepted values : `<string>`."],["ZN_PASSWORD_STR",""],["ZN_PEERS_AUTOCONNECT_DEFAULT",""],["ZN_PEERS_AUTOCONNECT_KEY","Indicates if peers should connect to each other when they discover each other (through multicast or gossip discovery). String key : `\"peers_autoconnect\"`. Accepted values : `\"true\"`, `\"false\"`. Default value : `\"true\"`."],["ZN_PEERS_AUTOCONNECT_STR",""],["ZN_PEER_ID_KEY","Configures the peer ID. String key : `\"peer_id\"`. Accepted values : `<UUID>`."],["ZN_PEER_ID_STR",""],["ZN_QOS_DEFAULT",""],["ZN_QOS_KEY","Configures the QoS support. String key : `\"qos\"`. Accepted values : `\"true\"`, `\"false\"`. Default value : `\"true\"`."],["ZN_QOS_STR",""],["ZN_QUERIES_DEFAULT_TIMEOUT_DEFAULT",""],["ZN_QUERIES_DEFAULT_TIMEOUT_KEY","The default timeout to apply to queries in milliseconds. String key : `\"queries_default_timeout\"`. Accepted values : `<unsigned integer>`. Default value : `10000`."],["ZN_QUERIES_DEFAULT_TIMEOUT_STR",""],["ZN_ROUTERS_AUTOCONNECT_GOSSIP_DEFAULT",""],["ZN_ROUTERS_AUTOCONNECT_GOSSIP_KEY","Indicates if routers should connect to each other when they discover each other through gossip discovery. String key : `\"routers_autoconnect_gossip\"`. Accepted values : `\"true\"`, `\"false\"`. Default value : `\"false\"`."],["ZN_ROUTERS_AUTOCONNECT_GOSSIP_STR",""],["ZN_ROUTERS_AUTOCONNECT_MULTICAST_DEFAULT",""],["ZN_ROUTERS_AUTOCONNECT_MULTICAST_KEY","Indicates if routers should connect to each other when they discover each other through multicast. String key : `\"routers_autoconnect_multicast\"`. Accepted values : `\"true\"`, `\"false\"`. Default value : `\"false\"`."],["ZN_ROUTERS_AUTOCONNECT_MULTICAST_STR",""],["ZN_SCOUTING_DELAY_DEFAULT",""],["ZN_SCOUTING_DELAY_KEY","In peer mode, the period dedicated to scouting first remote peers before doing anything else. String key : `\"scouting_delay\"`. Accepted values : `<float in seconds>`. Default value : `\"0.2\"`."],["ZN_SCOUTING_DELAY_STR",""],["ZN_SCOUTING_TIMEOUT_DEFAULT",""],["ZN_SCOUTING_TIMEOUT_KEY","In client mode, the period dedicated to scouting a router before failing. String key : `\"scouting_timeout\"`. Accepted values : `<float in seconds>`. Default value : `\"3.0\"`."],["ZN_SCOUTING_TIMEOUT_STR",""],["ZN_SEQ_NUM_RESOLUTION_DEFAULT",""],["ZN_SEQ_NUM_RESOLUTION_KEY","Configures the sequence number resolution. String key : `\"seq_num_resolution\"`. Accepted values : `<unsigned integer>`. Default value : `268435456` (2^28)."],["ZN_SEQ_NUM_RESOLUTION_STR",""],["ZN_SHM_DEFAULT",""],["ZN_SHM_KEY","Indicates if the shared-memory features should be used. String key : `\"shm\"`. Accepted values : `\"true\"`, `\"false\"`. Default value : `\"true\"`."],["ZN_SHM_STR",""],["ZN_TLS_CLIENT_AUTH_DEFAULT",""],["ZN_TLS_CLIENT_AUTH_KEY","The file path containing the TLS server certificate. String key : `\"tls_private_key\"`. Accepted values : `\"true\"`, `\"false\"`. Default value : `\"false\"`."],["ZN_TLS_CLIENT_AUTH_STR",""],["ZN_TLS_CLIENT_CERTIFICATE_KEY","The file path containing the TLS server certificate. String key : `\"tls_client_private_key\"`. Accepted values : `<file path>`. Default value : None."],["ZN_TLS_CLIENT_CERTIFICATE_STR",""],["ZN_TLS_CLIENT_PRIVATE_KEY_KEY","The file path containing the TLS server private key. String key : `\"tls_client_private_key\"`. Accepted values : `<file path>`. Default value : None."],["ZN_TLS_CLIENT_PRIVATE_KEY_STR",""],["ZN_TLS_ROOT_CA_CERTIFICATE_KEY","The file path containing the TLS root CA certificate. String key : `\"tls_root_ca_certificate\"`. Accepted values : `<file path>`. Default value : None."],["ZN_TLS_ROOT_CA_CERTIFICATE_STR",""],["ZN_TLS_SERVER_CERTIFICATE_KEY","The file path containing the TLS server certificate. String key : `\"tls_server_certificate\"`. Accepted values : `<file path>`. Default value : None."],["ZN_TLS_SERVER_CERTIFICATE_STR",""],["ZN_TLS_SERVER_PRIVATE_KEY_KEY","The file path containing the TLS server private key. String key : `\"tls_server_private_key\"`. Accepted values : `<file path>`. Default value : None."],["ZN_TLS_SERVER_PRIVATE_KEY_STR",""],["ZN_TRUE","`\"true\"`"],["ZN_USER_KEY","The user name to use for authentication. String key : `\"user\"`. Accepted values : `<string>`."],["ZN_USER_PASSWORD_DICTIONARY_KEY","The file path containing the user password dictionary. String key : `\"user_password_dictionary\"`. Accepted values : `<file path>`."],["ZN_USER_PASSWORD_DICTIONARY_STR",""],["ZN_USER_STR",""],["ZN_VERSION_KEY","Configures the zenoh version. String key : `\"version\"`. Accepted values : `<unsigned integer>`."],["ZN_VERSION_STR",""]],"enum":[["ConfigOpenErr",""],["GetError",""],["ModeDependentValue",""],["Priority",""]],"fn":[["client","Creates a default `'client'` mode zenoh net Session configuration."],["default","Creates a default zenoh net Session configuration (equivalent to `peer`)."],["empty","Creates an empty zenoh net Session configuration."],["peer","Creates a default `'peer'` mode zenoh net Session configuration."],["sift_privates",""]],"macro":[["unwrap_or_default",""]],"mod":[["defaults",""],["whatami","Constants and helpers for zenoh `whatami` flags."]],"struct":[["AdminSpaceConf",""],["AggregationConf",""],["AuthConf",""],["Config","The main configuration structure for Zenoh."],["ConnectConfig",""],["EndPoint","A `String` that respects the [`EndPoint`] canon form: `<locator>#<config>`, such that `<locator>` is a valid [`Locator`] `<config>` is of the form `<key1>=<value1>;...;<keyN>=<valueN>` where keys are alphabetically sorted."],["GetGuard",""],["GossipConf",""],["LinkRxConf",""],["LinkTxConf",""],["ListenConfig",""],["Locator","A `String` that respects the [`Locator`] canon form: `<proto>/<address>?<metadata>`, such that `<metadata>` is of the form `<key1>=<value1>;...;<keyN>=<valueN>` where keys are alphabetically sorted."],["ModeValues",""],["Notifier",""],["PeerRoutingConf",""],["PermissionsConf",""],["PluginLoad",""],["PluginSearchDirs",""],["PluginsConfig","This part of the configuration is highly dynamic (any [`serde_json::Value`] may be put in there), but should follow this scheme:"],["PubKeyConf",""],["QoSConf",""],["QueueConf",""],["QueueSizeConf",""],["RouterRoutingConf",""],["RoutingConf",""],["ScoutingConf",""],["ScoutingMulticastConf",""],["SharedMemoryConf",""],["TLSConf",""],["TimestampingConf",""],["TransportConf",""],["TransportLinkConf",""],["TransportMulticastConf",""],["TransportUnicastConf",""],["UserConf",""],["ZenohId","The global unique id of a zenoh peer."]],"trait":[["ModeDependent",""],["ValidatedMap",""]],"type":[["Notification",""],["ValidationFunction",""],["WhatAmI",""]]};